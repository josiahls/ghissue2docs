# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_core.ipynb (unless otherwise specified).

__all__ = ['IN_NOTEBOOK', 'get_issues', 'issue2txt', 'issue2markdown', 'issue2ipynb']

# Cell
# Python native modules
import os,json
from typing import *
# Third party libs
from fastcore.all import *
import nbformat
# Local modules

IN_NOTEBOOK=False

# Cell
def get_issues(label=None)->dict:
    json_cmd='--json assignees,author,body,title,url,id'
    if label is None: out=run(f'gh issue list {json_cmd}',stderr=True)
    else:             out=run(f'gh issue list -l {label} {json_cmd}',stderr=True)
    return json.loads(out)

# Cell
_image_not_loading="Oh No! You should not be seeing this! Make sure you're logged into github if the repo is private!"

def issue2txt(issue:Dict)->Tuple[List[str],List[str],str]:
    nests=issue['title'].split('.')[:-1]
    sections=[
f"""# {issue['title'].split('.')[-1]}\n""",
f"""Issue [#{issue['url'].split('/')[-1]}]({issue['url']})<br>
Author: @{issue['author']['login']}
<hr>
{issue['body'].replace('![image]','<br>!['+_image_not_loading+']')}
"""
]
    if IN_NOTEBOOK:
        from IPython.display import display, Markdown, Latex
        display(Markdown('<br>'.join(sections)))
    return sections,issue['id'],nests


# Cell
def issue2markdown(text:List[str],issueid:str,nesting:List[str]=None,to:Path=Path('.')):
    if nesting is not None:
        for n in nesting: to/=n
    to/=f'{issueid}.md'
    to.mk_write('\n'.join(text))
    return to

# Cell
def issue2ipynb(text:List[str],issueid:str,nesting:List[str]=None,to:Path=Path('.')):
    if nesting is not None:
        for n in nesting: to/=n
    if nesting: to=f'{99}_{".".join(nesting)}.{issueid}.ipynb'
    else:       to=f'{99}_{issueid}.ipynb'

    nb=nbformat.v4.new_notebook()

    title_cell=nbformat.v4.new_markdown_cell(text[0])
    if len(text)<1: other_cells=[]
    else:           other_cells=[nbformat.v4.new_markdown_cell(s) for s in text[1:]]

    nb['cells']=[title_cell]+other_cells
    nbformat.write(nb,to)
    return to